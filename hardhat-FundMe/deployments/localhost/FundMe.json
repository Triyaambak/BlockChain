{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnoughEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__WithdrawFailed",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe565ad84fcdb1a57492599858cd89bf39fdf98236abc1fe20089ba7c41412a58",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "859347",
    "logsBloom": "0x
    "blockHash": "0x0234d78ea7a5943decab6e85f7475b62841e6847d6e92ab41db4a8b5358496db",
    "transactionHash": "0xe565ad84fcdb1a57492599858cd89bf39fdf98236abc1fe20089ba7c41412a58",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "859347",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "7acab46092b6a4b26d44fb4301314234",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__WithdrawFailed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Triyaambak S\",\"details\":\"This implements price feeds as our libraries\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//Errors\\nerror FundMe__NotOwner();\\nerror FundMe__NotEnoughEth();\\nerror FundMe__WithdrawFailed();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Triyaambak S\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our libraries\\n */\\n\\ncontract FundMe {\\n    //Type declarations\\n    using PriceConvertor for uint256;\\n\\n    //State variables\\n    uint256 public constant MINUSD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmount;\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner,\\\"Sender is not Owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(s_priceFeed) <= MINUSD) {\\n            revert FundMe__NotEnoughEth();\\n        }\\n        s_funders.push(msg.sender);\\n        s_addressToAmount[msg.sender] += msg.value;\\n    }\\n\\n    /*\\n        This withdraw function takes a ton of gas and hence is optimized\\n        function withdraw() public onlyOwner {\\n            for (uint256 i = 0; i < s_funders.length; i++) {\\n                address funder = s_funders[i];\\n                s_addressToAmount[funder] = 0;\\n            }\\n\\n            s_funders = new address[](0);\\n\\n            (bool success, ) = payable(msg.sender).call{\\n                value: address(this).balance\\n            }(\\\"\\\");\\n            require(success, \\\"Withdraw failed\\\");\\n        }\\n    */\\n\\n    function withdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmount[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (success != true) {\\n            revert FundMe__WithdrawFailed();\\n        }\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function addressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmount[funder];\\n    }\\n\\n    function getFunder() public view returns (address) {\\n        return s_funders[s_funders.length - 1];\\n    }\\n}\\n\",\"keccak256\":\"0x71ffe1d0b1f459b1f0215c20e74c73708ada1bc2b65574ec630c0d1edfe2768c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.8;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor {\\n    function getPrice(\\n        AggregatorV3Interface priceFeedAddress\\n    ) internal view returns (uint256) {\\n        //Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            priceFeedAddress\\n        );\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e18);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface versionFeed = AggregatorV3Interface(\\n            0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        );\\n        return versionFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPriceUSD = getPrice(priceFeed);\\n        uint256 ethAmountUSD = (ethAmount * ethPriceUSD) / 1e18;\\n        return ethAmountUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x035ea1610a76b2e764c9335e39b3b805e1a79e52143a1e1cde45e4d29b5dc624\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f84380380610f8483398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e2661015e60003960006102f00152610e266000f3fe6080604052600436106100745760003560e01c80634dc936161161004e5780634dc936161461010c5780638abb9845146101375780639e87a5cd14610162578063b60d42881461018d57610083565b80630ec3b0271461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b3661008357610081610197565b005b61008b610197565b005b34801561009957600080fd5b506100a26102c8565b6040516100af9190610871565b60405180910390f35b3480156100c457600080fd5b506100cd6102ee565b005b3480156100db57600080fd5b506100f660048036038101906100f191906108cf565b610590565b6040516101039190610915565b60405180910390f35b34801561011857600080fd5b506101216105d9565b60405161012e9190610915565b60405180910390f35b34801561014357600080fd5b5061014c6105e6565b604051610159919061093f565b60405180910390f35b34801561016e57600080fd5b5061017761063c565b6040516101849190610871565b60405180910390f35b610195610197565b005b6802b5e3af16b18800006101d6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066690919063ffffffff16565b1161020d576040517f5ed3980900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102bf9190610989565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610373576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103f657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103ac575b5050505050905060005b815181101561048157600082828151811061041e5761041d6109df565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047990610a0e565b915050610400565b50600067ffffffffffffffff81111561049d5761049c610a57565b5b6040519080825280602002602001820160405280156104cb5781602001602082028036833780820191505090505b50600090805190602001906104e192919061074b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050890610ab7565b60006040518083038185875af1925050503d8060008114610545576040519150601f19603f3d011682016040523d82523d6000602084013e61054a565b606091505b50509050600115158115151461058c576040517ff02e6d3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b60008060016000805490506105fb9190610acc565b8154811061060c5761060b6109df565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610672836106a2565b90506000670de0b6b3a7640000828661068b9190610b00565b6106959190610b89565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f057600080fd5b505afa158015610704573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107289190610c5e565b505050915050670de0b6b3a7640000816107429190610cd9565b92505050919050565b8280548282559060005260206000209081019282156107c4579160200282015b828111156107c35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061076b565b5b5090506107d191906107d5565b5090565b5b808211156107ee5760008160009055506001016107d6565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061083761083261082d846107f2565b610812565b6107f2565b9050919050565b60006108498261081c565b9050919050565b600061085b8261083e565b9050919050565b61086b81610850565b82525050565b60006020820190506108866000830184610862565b92915050565b600080fd5b600061089c826107f2565b9050919050565b6108ac81610891565b81146108b757600080fd5b50565b6000813590506108c9816108a3565b92915050565b6000602082840312156108e5576108e461088c565b5b60006108f3848285016108ba565b91505092915050565b6000819050919050565b61090f816108fc565b82525050565b600060208201905061092a6000830184610906565b92915050565b61093981610891565b82525050565b60006020820190506109546000830184610930565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610994826108fc565b915061099f836108fc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109d4576109d361095a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a19826108fc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a4c57610a4b61095a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa1600083610a86565b9150610aac82610a91565b600082019050919050565b6000610ac282610a94565b9150819050919050565b6000610ad7826108fc565b9150610ae2836108fc565b925082821015610af557610af461095a565b5b828203905092915050565b6000610b0b826108fc565b9150610b16836108fc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4f57610b4e61095a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b94826108fc565b9150610b9f836108fc565b925082610baf57610bae610b5a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd981610bba565b8114610be457600080fd5b50565b600081519050610bf681610bd0565b92915050565b6000819050919050565b610c0f81610bfc565b8114610c1a57600080fd5b50565b600081519050610c2c81610c06565b92915050565b610c3b816108fc565b8114610c4657600080fd5b50565b600081519050610c5881610c32565b92915050565b600080600080600060a08688031215610c7a57610c7961088c565b5b6000610c8888828901610be7565b9550506020610c9988828901610c1d565b9450506040610caa88828901610c49565b9350506060610cbb88828901610c49565b9250506080610ccc88828901610be7565b9150509295509295909350565b6000610ce482610bfc565b9150610cef83610bfc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2e57610d2d61095a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d6b57610d6a61095a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610da857610da761095a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610de557610de461095a565b5b82820290509291505056fea264697066735822122005ee3351610c7398fc631d74896ce7b567914d44d00e280b5665a0ad2ea1ff6d64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80634dc936161161004e5780634dc936161461010c5780638abb9845146101375780639e87a5cd14610162578063b60d42881461018d57610083565b80630ec3b0271461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b3661008357610081610197565b005b61008b610197565b005b34801561009957600080fd5b506100a26102c8565b6040516100af9190610871565b60405180910390f35b3480156100c457600080fd5b506100cd6102ee565b005b3480156100db57600080fd5b506100f660048036038101906100f191906108cf565b610590565b6040516101039190610915565b60405180910390f35b34801561011857600080fd5b506101216105d9565b60405161012e9190610915565b60405180910390f35b34801561014357600080fd5b5061014c6105e6565b604051610159919061093f565b60405180910390f35b34801561016e57600080fd5b5061017761063c565b6040516101849190610871565b60405180910390f35b610195610197565b005b6802b5e3af16b18800006101d6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066690919063ffffffff16565b1161020d576040517f5ed3980900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102bf9190610989565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610373576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103f657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103ac575b5050505050905060005b815181101561048157600082828151811061041e5761041d6109df565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047990610a0e565b915050610400565b50600067ffffffffffffffff81111561049d5761049c610a57565b5b6040519080825280602002602001820160405280156104cb5781602001602082028036833780820191505090505b50600090805190602001906104e192919061074b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050890610ab7565b60006040518083038185875af1925050503d8060008114610545576040519150601f19603f3d011682016040523d82523d6000602084013e61054a565b606091505b50509050600115158115151461058c576040517ff02e6d3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b60008060016000805490506105fb9190610acc565b8154811061060c5761060b6109df565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610672836106a2565b90506000670de0b6b3a7640000828661068b9190610b00565b6106959190610b89565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f057600080fd5b505afa158015610704573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107289190610c5e565b505050915050670de0b6b3a7640000816107429190610cd9565b92505050919050565b8280548282559060005260206000209081019282156107c4579160200282015b828111156107c35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061076b565b5b5090506107d191906107d5565b5090565b5b808211156107ee5760008160009055506001016107d6565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061083761083261082d846107f2565b610812565b6107f2565b9050919050565b60006108498261081c565b9050919050565b600061085b8261083e565b9050919050565b61086b81610850565b82525050565b60006020820190506108866000830184610862565b92915050565b600080fd5b600061089c826107f2565b9050919050565b6108ac81610891565b81146108b757600080fd5b50565b6000813590506108c9816108a3565b92915050565b6000602082840312156108e5576108e461088c565b5b60006108f3848285016108ba565b91505092915050565b6000819050919050565b61090f816108fc565b82525050565b600060208201905061092a6000830184610906565b92915050565b61093981610891565b82525050565b60006020820190506109546000830184610930565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610994826108fc565b915061099f836108fc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109d4576109d361095a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a19826108fc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a4c57610a4b61095a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa1600083610a86565b9150610aac82610a91565b600082019050919050565b6000610ac282610a94565b9150819050919050565b6000610ad7826108fc565b9150610ae2836108fc565b925082821015610af557610af461095a565b5b828203905092915050565b6000610b0b826108fc565b9150610b16836108fc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4f57610b4e61095a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b94826108fc565b9150610b9f836108fc565b925082610baf57610bae610b5a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd981610bba565b8114610be457600080fd5b50565b600081519050610bf681610bd0565b92915050565b6000819050919050565b610c0f81610bfc565b8114610c1a57600080fd5b50565b600081519050610c2c81610c06565b92915050565b610c3b816108fc565b8114610c4657600080fd5b50565b600081519050610c5881610c32565b92915050565b600080600080600060a08688031215610c7a57610c7961088c565b5b6000610c8888828901610be7565b9550506020610c9988828901610c1d565b9450506040610caa88828901610c49565b9350506060610cbb88828901610c49565b9250506080610ccc88828901610be7565b9150509295509295909350565b6000610ce482610bfc565b9150610cef83610bfc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2e57610d2d61095a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d6b57610d6a61095a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610da857610da761095a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610de557610de461095a565b5b82820290509291505056fea264697066735822122005ee3351610c7398fc631d74896ce7b567914d44d00e280b5665a0ad2ea1ff6d64736f6c63430008080033",
  "devdoc": {
    "author": "Triyaambak S",
    "details": "This implements price feeds as our libraries",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}